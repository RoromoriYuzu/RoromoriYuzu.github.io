import{_ as e,c as l,o as r,ag as t}from"./chunks/framework.BgId8OS5.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/ReverseEngineering/常用加密和编码结果的特征总结.md","filePath":"posts/ReverseEngineering/常用加密和编码结果的特征总结.md","lastUpdated":null}'),i={name:"posts/ReverseEngineering/常用加密和编码结果的特征总结.md"};function s(h,a,o,n,d,u){return r(),l("div",null,a[0]||(a[0]=[t('<h2 id="md5" tabindex="-1">MD5 <a class="header-anchor" href="#md5" aria-label="Permalink to &quot;MD5&quot;">​</a></h2><p>加密结果是32位的数字加小写字母组合</p><h2 id="_16位md5" tabindex="-1">16位MD5 <a class="header-anchor" href="#_16位md5" aria-label="Permalink to &quot;16位MD5&quot;">​</a></h2><p>加密结果16位数字加小写字母组合</p><h2 id="sha1" tabindex="-1">SHA1 <a class="header-anchor" href="#sha1" aria-label="Permalink to &quot;SHA1&quot;">​</a></h2><p>加密结果是40位数字加小写字母组合</p><h2 id="sha256" tabindex="-1">SHA256 <a class="header-anchor" href="#sha256" aria-label="Permalink to &quot;SHA256&quot;">​</a></h2><p>加密结果是64位数字加小写字母组合</p><h2 id="sha384" tabindex="-1">SHA384 <a class="header-anchor" href="#sha384" aria-label="Permalink to &quot;SHA384&quot;">​</a></h2><p>加密结果是96位数字加小写字母组合</p><h2 id="sha512" tabindex="-1">SHA512 <a class="header-anchor" href="#sha512" aria-label="Permalink to &quot;SHA512&quot;">​</a></h2><p>加密结果是128位数字加小写字母组合</p><h2 id="url编码" tabindex="-1">URL编码 <a class="header-anchor" href="#url编码" aria-label="Permalink to &quot;URL编码&quot;">​</a></h2><ul><li>空格-%20</li><li>0 ~ 9 - %30 ~ %39</li><li>abcdefghijklmnopqrstuvwxyz-%61%62%63%64%65%66%67%68%69%6A%6B%6C%6D%6E%6F%70%71%72%73%74%75%76%77%78%79%7A</li></ul><h2 id="base64编码" tabindex="-1">BASE64编码 <a class="header-anchor" href="#base64编码" aria-label="Permalink to &quot;BASE64编码&quot;">​</a></h2><p>密文长度随明文长度变化，密文由数字，大小写字母，和字符组成，常会出现==，+，=</p><h2 id="unescape编码" tabindex="-1">Unescape编码 <a class="header-anchor" href="#unescape编码" aria-label="Permalink to &quot;Unescape编码&quot;">​</a></h2><ul><li>abcd -&gt; %u6261%u6463%u0a0d%u0000 <ul><li>%u0000表示明文长度为偶数</li><li>%u+4位数字表示两个明文字符</li></ul></li><li>abcde -&gt; %u6261%u6463%u0d65%u000a <ul><li>%u000a 即最后密文端表示明文长度为奇数</li><li>2x2+1=5</li></ul></li></ul><h2 id="aes加密" tabindex="-1">AES加密 <a class="header-anchor" href="#aes加密" aria-label="Permalink to &quot;AES加密&quot;">​</a></h2><p>AES加密由加密模式，填充，数据块，密码，偏移量，输出，字符集组成：</p><p>解密是需要，密码，偏移量，填充方式，数据块这四个值，后两者可能性有限可以手工测试，但前两者是加密者设置的。</p><p>判断：由于输出结果是基于base64或hex,所以可以通过base64和hex解密结果判断是否是AES加密：</p><h2 id="常见加密形式" tabindex="-1">常见加密形式 <a class="header-anchor" href="#常见加密形式" aria-label="Permalink to &quot;常见加密形式&quot;">​</a></h2><p>直接加密，带salt，带密码，带偏移量，带位数的，带模式，带干扰，自定义组合的。</p>',24)]))}const _=e(i,[["render",s]]);export{p as __pageData,_ as default};
