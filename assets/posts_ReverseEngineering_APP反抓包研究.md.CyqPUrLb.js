import{_ as i,c as a,o as e,ag as l}from"./chunks/framework.BgId8OS5.js";const n="/post-images/1658477518577.png",E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/ReverseEngineering/APP反抓包研究.md","filePath":"posts/ReverseEngineering/APP反抓包研究.md","lastUpdated":null}'),r={name:"posts/ReverseEngineering/APP反抓包研究.md"};function t(p,s,h,d,o,k){return e(),a("div",null,s[0]||(s[0]=[l('<h2 id="用到的工具" tabindex="-1">用到的工具 <a class="header-anchor" href="#用到的工具" aria-label="Permalink to &quot;用到的工具&quot;">​</a></h2><ul><li>Fiddler</li><li>雷电模拟器 或 其他模拟器 又或者是你的手机</li><li>Xposed</li><li>JustTrustMe<a href="https://github.com/Fuzion24/JustTrustMe" target="_blank" rel="noreferrer">^JustTrustMe</a> 或 TrustMeAlerady<a href="https://github.com/ViRb3/TrustMeAlready" target="_blank" rel="noreferrer">^TrustMeAlerady</a></li><li>工具包</li><li>Openssl</li></ul><hr><ul><li>VMOS</li><li>HttpCanary</li></ul><h2 id="给安卓模拟器安装xposed框架-方法太旧了-新方法看下面" tabindex="-1">给安卓模拟器安装Xposed框架 （方法太旧了，新方法看下面） <a class="header-anchor" href="#给安卓模拟器安装xposed框架-方法太旧了-新方法看下面" aria-label="Permalink to &quot;给安卓模拟器安装Xposed框架 （方法太旧了，新方法看下面）&quot;">​</a></h2><p>（已经有 Xposed 权限的可以忽略） 确保模拟器已开启Root权限并且是 Android 7.1 64 位，下载工具包，里面有所用到的文件</p><p><a href="https://pan.baidu.com/s/1wBllwjoXlnZ3OuVFNXr3bg?pwd=hfr7" target="_blank" rel="noreferrer">下载链接</a></p><ol><li><p>解压后安装里面的三个APP。</p></li><li><p>将 Xposed 文件夹放在模拟器的共享文件夹下。</p><ol><li>在模拟器中打开安装好文件管理器。</li><li>打开 <code>/sdcard/pictures</code> 目录里 <code>Xposed</code> 鼠标左键按住出现复制选项。</li><li>返回找到 <code>system</code> 文件夹 粘贴。</li><li>将 <code>Xposed</code> 文件夹复制到 <code>system</code> 目录。</li></ol></li><li><p>打开安装好的终端模拟器。</p><ol><li>输入 <code>su</code> 执行。</li><li>输入 <code>cd /system/xposed </code>执行。</li><li>输入 <code>sh memu-script.sh</code> 执行。</li></ol></li><li><p>命令执行完毕 直接重启模拟器 即可。</p></li><li><p>安装 TrustMeAlerady 然后在 Xposed 里勾选上。</p></li><li><p>重启。</p></li></ol><h2 id="给安卓模拟器安装magisk-和-lsposed-框架-2023-11-15-更新" tabindex="-1">给安卓模拟器安装Magisk 和 LSPosed 框架 （2023-11-15 更新） <a class="header-anchor" href="#给安卓模拟器安装magisk-和-lsposed-框架-2023-11-15-更新" aria-label="Permalink to &quot;给安卓模拟器安装Magisk 和 LSPosed 框架 （2023-11-15 更新）&quot;">​</a></h2><ol><li>安装雷电模拟器 <a href="https://www.123pan.com/s/A6cA-5GAJh" target="_blank" rel="noreferrer">去广告绿色版</a>，使用 Android 9 系统。</li><li>下载安装 <a href="https://github.com/HuskyDG/magisk-files/releases" target="_blank" rel="noreferrer">适用于模拟器的 Magisk</a> ，我使用的是 <code>1327b58c-delta(25201)(D)</code> 版本，这个版本有个Bug 点击日志会卡住，但较高版本移除了 MagiskHide 并且开启 Zygisk 后会无法开机。 <ol><li>在模拟器设置里开启 ROOT 权限和 System.vmdk 可写入</li><li>打开 Magisk Delta 如索取 ROOT 权限请给予，点击安装。如弹出访问设备上的文件权限申请请允许，完成后在新界面 <code>不要有操作</code>，关闭 Magisk Delta 并重新打开。</li><li>再次打开 Magisk Delta 后还是点击安装，然后点击下一步，在方式下出现三个选项，这里选择 <code>安装至系统分区</code>，如果没有出现三个选项请看第二步。</li><li>此时正常不出意外的话 Magisk Delta 就安装成功了。</li></ol></li><li>下载安装 [LSPosed模块] (<a href="https://github.com/LSPosed/LSPosed/releases" target="_blank" rel="noreferrer">https://github.com/LSPosed/LSPosed/releases</a>)</li><li>之后安装 TrustMeAlerady 之类的插件就可以了。</li></ol><h2 id="抓包" tabindex="-1">抓包 <a class="header-anchor" href="#抓包" aria-label="Permalink to &quot;抓包&quot;">​</a></h2><ol><li>查看你的 Fiddler 的代理端口。</li><li>在 CMD 里执行<code> ipconfig</code> 查看本机的 IP 地址。</li><li>在模拟器内 查看 wifi -&gt; 修改网络 -&gt; 代理 -&gt; 手动 -&gt; 填写前面的IP和端口。</li><li>在主机打开浏览器 输入IP和端口 点击 FiddlerRoot certificate 下载证书。</li><li>准备导入证书到模拟器的根目录</li><li>安装openssl（可选） <a href="http://slproweb.com/products/Win32OpenSSL.html" target="_blank" rel="noreferrer">下载地址</a><ol><li>使用openssl命令解析证书的hash值</li><li><code>openssl x509 -subject_hash_old -in .\\FiddlerRoot.cer -inform der</code><img src="'+n+`" width="50%"> 拿到hash值：269953fb，好像证书的hash都是这个，所以可以省略这一步</li></ol></li><li>将刚刚导出到桌面的证书改成269953fb.0，0是后缀名</li><li>导入 269953fb.0 证书到手机设备 和这里的步骤差不多 <a href="#%E5%AF%BC%E5%85%A5%E8%AF%81%E4%B9%A6">导入证书</a></li></ol><p>接下来没有什么错误的话，应该可以正常抓包了。</p><hr><h3 id="使用vmos-抓包" tabindex="-1">使用VMOS 抓包 <a class="header-anchor" href="#使用vmos-抓包" aria-label="Permalink to &quot;使用VMOS 抓包&quot;">​</a></h3><p>工具包 <a href="https://pan.baidu.com/s/1AMUdQAGao94VzFZ-fNUHZw?pwd=9bax" target="_blank" rel="noreferrer">下载链接</a></p><h4 id="安装模块" tabindex="-1">安装模块 <a class="header-anchor" href="#安装模块" aria-label="Permalink to &quot;安装模块&quot;">​</a></h4><p>VMOS 内有很多自带 Xposed 的 ROM 就不说怎么安装了。</p><ol><li>同样在 Xposed 里面安装上 TrustMeAlerady 模块。</li></ol><h4 id="导入证书" tabindex="-1">导入证书 <a class="header-anchor" href="#导入证书" aria-label="Permalink to &quot;导入证书&quot;">​</a></h4><ol><li>打开 HttpCanay SSL证书设置选择导出根证书，类型System Trusted (.0) <code>导出的证书储存路径为：内部储存/HttpCanary/cert/</code></li><li>打开虚拟机 VMOS ，选择文件中转站—我要导入：RE管理器+目标APP+证书。</li><li>打开并赋予RE管理器root权限，刚刚导入的证书在VMOSfiletransferstatio目录下，将其复制到VMOS系统内：/system/etc/security/cacerts/目录下即可。</li><li>返回本机启动小黄鸟，目标应用-设置VMOS-开启抓包。</li></ol><h3 id="微信小程序抓包" tabindex="-1">微信小程序抓包 <a class="header-anchor" href="#微信小程序抓包" aria-label="Permalink to &quot;微信小程序抓包&quot;">​</a></h3><p>（太旧，已失效，可以使用 HTTPDebugger 直接抓包） <s>因为微信有检测，不太能放在模拟器里，但 PC 端的微信没有 SSL 验证，可以直接抓包。 如果 Fiddler 抓不到的话 <code>C:\\Users\\你的用户名\\AppData\\Roaming\\Tencent\\WeChat\\XPlugin\\Plugins\\WMPFRuntime</code> 文件夹内的文件全部删除，重新打开微信就能解决。</s></p><h2 id="微信小程序配合clash抓包" tabindex="-1">微信小程序配合Clash抓包 <a class="header-anchor" href="#微信小程序配合clash抓包" aria-label="Permalink to &quot;微信小程序配合Clash抓包&quot;">​</a></h2><p>TUN模式开启，Windows的系统代理要关掉。</p><p>Clash for Windows 的 Proxies 选择 Rule</p><p>Clash 配置 （其中port是你的 Fiddler 的端口）</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">proxies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Fiddler</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8888</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">proxy-groups</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Proxy</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    proxies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Fiddler</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">select</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PROCESS-NAME,Fiddler.exe,DIRECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PROCESS-NAME,WeChatAppEx.exe,Fiddler</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PROCESS-NAME,WeChat.exe,Fiddler</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MATCH,DIRECT</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,28)]))}const g=i(r,[["render",t]]);export{E as __pageData,g as default};
