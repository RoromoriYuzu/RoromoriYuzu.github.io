import{_ as a,c as i,o as e,ag as n}from"./chunks/framework.BgId8OS5.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/Other/软路由安装 PVE+ikuai主路由+OpenWrt旁路由 显卡直通.md","filePath":"posts/Other/软路由安装 PVE+ikuai主路由+OpenWrt旁路由 显卡直通.md","lastUpdated":null}'),l={name:"posts/Other/软路由安装 PVE+ikuai主路由+OpenWrt旁路由 显卡直通.md"};function p(t,s,r,h,d,o){return e(),i("div",null,s[0]||(s[0]=[n(`<p>仅结合自己理解作简要概括，不保证全对。详细步骤在 <a href="https://www.bilibili.com/video/BV1pu411z7v4" target="_blank" rel="noreferrer">软路由安装PVE虚拟机安装OpenWrt iKuai</a></p><blockquote><p>主机 畅网 J4125 i226网卡 四网口 准系统 内存 联想 DDR4 8G 2666 硬盘 铠侠 SATA TC10 480GB</p></blockquote><h2 id="安装-pve" tabindex="-1">安装 PVE <a class="header-anchor" href="#安装-pve" aria-label="Permalink to &quot;安装 PVE&quot;">​</a></h2><p>首先在 <a href="https://www.proxmox.com/en/downloads" target="_blank" rel="noreferrer">PVE官网</a> 下载 ISO 镜像。</p><p><img src="https://blog.diyworld.me/post-images/1675158895806.jpg" alt="" loading="lazy"></p><p>然后下载写盘工具 <code>Rufus</code> ，插入U盘将镜像写入。</p><p>准备显示屏，键盘和鼠标，插入U盘到主机上，开机自动进入配置页面，具体配置按自己喜好。</p><p>然后找一根网线连接主机 <code>ETH0</code> ，另一端连电脑，打开电脑 <code>网络和共享中心</code> 选择对应 <code>以太网</code> -&gt;<code>属性</code>-&gt;<code>IPv4</code> 修改 IP 地址为 PVE 同一网段。</p><p>在电脑打开 https:// PVE地址:8006/ ，进入配置界面。</p><h2 id="设置网卡直通" tabindex="-1">设置网卡直通 <a class="header-anchor" href="#设置网卡直通" aria-label="Permalink to &quot;设置网卡直通&quot;">​</a></h2><p>打开PVE节点的shell,输入命令：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/default/grub</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>将</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GRUB CMDLINE_LINUX_DEFAULT=quiet&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>改为：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GRUB CMDLINE_LINUX_DEFAULT=quiet intel_iommu=on&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>编辑完文件后按“Ctl+X”&gt;&quot;Y&quot;&gt;“回车”，继续输入以下命令:</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/modules</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在文件下面添加新内容</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vfio</span></span>
<span class="line"><span>vfio iommu type1</span></span>
<span class="line"><span>vfio pci</span></span>
<span class="line"><span>vfio virgfd</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>编辑完文件后按&quot;Ct+X”&gt;“Y”&gt;“回车”，继续输入以下命令。</p><p>最后更新配置信息并重启PVE主机</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>update-grub</span></span>
<span class="line"><span>update-initramfs -u -k all</span></span>
<span class="line"><span>reboot</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>默认情况下会创建一个名为root的lv作为系统的根分区，大小为整个磁盘空间的25%，还用来保存系统镜像和虚拟机的快照；一个名为data的lvm-thin分区，作为虚拟机的磁盘。 <img src="https://blog.diyworld.me/post-images/1675183567764.jpg" alt="" loading="lazy"></p><p><a href="https://wzh.one/294.html" target="_blank" rel="noreferrer">相关知识</a></p><h2 id="安装-ikuai" tabindex="-1">安装 ikuai <a class="header-anchor" href="#安装-ikuai" aria-label="Permalink to &quot;安装 ikuai&quot;">​</a></h2><p>在 <a href="https://www.ikuai8.com/component/download" target="_blank" rel="noreferrer">ikuai官网</a> 下载ISO镜像，上传在local（pve)。</p><p>点击新建虚拟机，设置名称，选择 ikuai 镜像 ，分配磁盘大小 5G 足够，双核，类别 host ，分配内存 2048 。 新建完成后开启开机自启，修改引导顺序，分配网口，设置WAN和LIN口。</p><p><img src="https://blog.diyworld.me/post-images/1675161884034.jpg" alt="" loading="lazy"></p><h2 id="安装openwrt" tabindex="-1">安装OpenWrt <a class="header-anchor" href="#安装openwrt" aria-label="Permalink to &quot;安装OpenWrt&quot;">​</a></h2><p>我使用的固件是 <code>OpenWrt-Rpi</code> <a href="https://doc.openwrt.cc/2-OpenWrt-Rpi/1-Download/" target="_blank" rel="noreferrer">下载地址</a></p><p>选择 <code>x86_64</code> 设备跳转下载页面</p><p>下载 <code>immortalwrt-x86-64-generic-ext4-combined.img.gz</code> 到本地并解压为 <code>.img</code> 文件</p><p>同样上传在<code>local（pve)</code>，记住 <code>target file</code> 后面的 <strong>上传的文件路径</strong>。</p><p>然后新建虚拟机，设置名称，这里的镜像选择 不使用任何介质 ，磁盘大小随便后期会删除，双核，类别 host ，分配内存 1024 。</p><p>因为不是ISO镜像，所以无法直接选择，想要稍做处理。</p><p>新建完成后进入OpenWrt 节点的 <code>硬件</code> 选项，将硬盘先 <code>分离</code> ，然后 删除 。</p><p>进入 PVE 的shell界面，输入</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">qm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> importdisk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ikuai虚拟机的数字编号] [上传的文件路径] local-lvm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">例如</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> importdisk</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 101</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib/vz/template/iso/immortalwrt-x86-64-generic-ext4-combined.img</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local-lvm</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>再次回到OpenWrt 节点的 <code>硬件</code> 选项，这时多出一个 未使用的磁盘 ，选择，编辑，总线改为 <code>SATA</code>，点击添加，然后打开开机自启，修改引导顺序为</p><p><img src="https://blog.diyworld.me/post-images/1675161840067.png" alt="" loading="lazy"></p><p>进入 OpenWrt 的控制台后输入</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> etc/config/network</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>将 <code>option ipaddr</code> 修改成想要的地址，重启然后访问即可进入管理页面。</p><h2 id="设置主-旁路由" tabindex="-1">设置主&amp;旁路由 <a class="header-anchor" href="#设置主-旁路由" aria-label="Permalink to &quot;设置主&amp;旁路由&quot;">​</a></h2><h3 id="全部都走openwrt" tabindex="-1">全部都走OpenWrt <a class="header-anchor" href="#全部都走openwrt" aria-label="Permalink to &quot;全部都走OpenWrt&quot;">​</a></h3><p>如果将ikuai设置为主路由那么就将LAN口分配给ikuai，同理，设置OpenWrt为主路由就分配给OpenWrt。然后修改相关WAN口配置，设置这两个的网关为对方 IP 地址。</p><p>假如设置ikuai为主路由，OpenWrt为旁路由，那么将LAN口分配给ikuai虚拟机，并设置好WAN口，使用PPPoE拨号，输入宽带账号，并设置 DHCP 里的网关为 OpenWrt 的 IP 地址。 <img src="https://blog.diyworld.me/post-images/1675167438324.jpg" alt="" loading="lazy"> OpenWrt 的LAN网关设置为ikuai的ip地址 <img src="https://blog.diyworld.me/post-images/1675167506314.jpg" alt="" loading="lazy"></p><h3 id="部分走openwrt" tabindex="-1">部分走OpenWrt <a class="header-anchor" href="#部分走openwrt" aria-label="Permalink to &quot;部分走OpenWrt&quot;">​</a></h3><p>和上一个的区别是在ikuai里的网关设置为他自己(貌似这样会使在ikuai网关下的设备无法访问ikuai的管理页面)，然后在想要走 OpenWrt 的设备里网关设置为 OpenWrt 的地址。</p><h2 id="pve联网" tabindex="-1">PVE联网 <a class="header-anchor" href="#pve联网" aria-label="Permalink to &quot;PVE联网&quot;">​</a></h2><p>第一次安装PVE，正常情况下PVE的IP是在我们上网的网段的。没有网络有可能是没有配置DNS服务器地址或DNS地址是软路由网关地址。解决方法有3种：</p><p>1：设置DHCP自动获取网络地址和DNS服务器地址。但是这个会导致自己的PVEIP地址不固定。 2：在PVE网页页面上设置DNS服务器地址： <img src="https://blog.diyworld.me/post-images/1675225459327.png" alt="" loading="lazy"> 3：如果有使用iKuai、openwrt等软路由或者硬路由，可在其DNS设置中开启DNS代理 <img src="https://blog.diyworld.me/post-images/1675225482457.png" alt="" loading="lazy"></p><h2 id="pve的local和local-lvm" tabindex="-1">PVE的local和local-lvm <a class="header-anchor" href="#pve的local和local-lvm" aria-label="Permalink to &quot;PVE的local和local-lvm&quot;">​</a></h2><p><img src="https://blog.diyworld.me/post-images/1675241325963.jpg" alt="" loading="lazy"><code>local</code> 主要是存储 <code>虚拟机备份文件</code>、<code>上传的ISO镜像</code>、<code>容器模板</code>，在缺省安装时默认分配为磁盘的1/4大小，其中 PVE 系统就安装在这上面。</p><p><code>local-lvm</code> 主要是存储 <code>磁盘映像</code> 和 <code>容器</code> 创建的虚拟机文件和快照就保存在这里面。</p><p><img src="https://blog.diyworld.me/post-images/1675241454332.png" alt="" loading="lazy"><img src="https://blog.diyworld.me/post-images/1675241449235.png" alt="" loading="lazy"></p><p>当查看 lvm 的VM磁盘大小时会发现比使用率大得多，这是因为lvm是写时分配。</p><p><img src="https://blog.diyworld.me/post-images/1675241545091.png" alt="" loading="lazy"></p><h2 id="pve-自动释放空间" tabindex="-1">PVE 自动释放空间 <a class="header-anchor" href="#pve-自动释放空间" aria-label="Permalink to &quot;PVE 自动释放空间&quot;">​</a></h2><p>要实现自动释放空间，要满足一些条件：</p><p>1、虚拟机硬盘使用scsi接口 2、虚拟机硬盘开启“丢弃”选项 3、虚拟机里删除文件后，进行碎片整理或者优化 4、虚拟硬盘所在的PVE存储类型是“lvm-thin”，如果不是“lvm-thin”，虚拟硬盘类型必须是qcow2 5、虚拟机选项里面开启“QEMU Guest Agent”，虚拟机的windows系统安装QEMU Guest软件。</p><p>其中，“PVE存储类型使用“lvm-thin”” 是最有效的方法。满足以上一大堆条件后，就可以自动释放空间了。</p><p>处理方法： 1、关闭需要释放的磁盘的虚拟机 2、修改硬盘信息（在Discard的复选框打勾） <img src="https://blog.diyworld.me/post-images/1675242381534.webp" alt="" loading="lazy"></p><p>3、启动虚拟机，登录虚拟机执行如下命令</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fstrim</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -av</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>等命令执行完毕，磁盘空间就释放了。</p><h2 id="修复旁路由导致的终端mac地址重复的问题" tabindex="-1">修复旁路由导致的终端MAC地址重复的问题 <a class="header-anchor" href="#修复旁路由导致的终端mac地址重复的问题" aria-label="Permalink to &quot;修复旁路由导致的终端MAC地址重复的问题&quot;">​</a></h2><p>在 OpenWrt 软件包里搜索 <code>snmpd</code> 安装 进入iKuai的管理后台，依次点击“高级应用”→“跨三层应用”→“添加” 在“SNMP服务器IP”后输入你的LEDE路由管理IP，其他保证默认不变，点击保存即可。</p><h2 id="微信某些功能加载慢" tabindex="-1">微信某些功能加载慢 <a class="header-anchor" href="#微信某些功能加载慢" aria-label="Permalink to &quot;微信某些功能加载慢&quot;">​</a></h2><p><a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8086168&amp;page=2&amp;authorid=510570" target="_blank" rel="noreferrer">来源</a> 在 OpenWrt 网络-接口 中 lan 口的 IPV6 关闭就可以了（接口--LAN--一般设置，里面IPV6分配长度直接禁用）</p><p>原因是wan口只有ipv4，但是lan有IPV4和IPV6，怀疑是DNS解析微信的IPV6发生了错误。</p><h2 id="zerotier-异地组网" tabindex="-1">Zerotier 异地组网 <a class="header-anchor" href="#zerotier-异地组网" aria-label="Permalink to &quot;Zerotier 异地组网&quot;">​</a></h2><p><a href="https://iuok.me/blog/zerotier/" target="_blank" rel="noreferrer">参考</a></p><h3 id="配置zerotier" tabindex="-1">配置Zerotier <a class="header-anchor" href="#配置zerotier" aria-label="Permalink to &quot;配置Zerotier&quot;">​</a></h3><p>在 <a href="https://my.zerotier.com/" target="_blank" rel="noreferrer">控制台</a> 注册并登陆。创建网络后得到一个 Network ID，填入。 <img src="https://blog.diyworld.me/post-images/1675333597453.jpg" alt="" loading="lazy"></p><p>在网络管理页面中，Access Control 控制客户端认证方式，如果选择PRIVATE则每个客户端的加入都需要在此页面经由你允许。</p><p>在 IPv4 Auto-Assign 中，可以对客户端的 IP 段进行配置，不和你原来的网络地址冲突即可。 <img src="https://blog.diyworld.me/post-images/1675333752505.png" alt="" loading="lazy"></p><p>在 Members 中你可以管理该网络下的所有客户端，勾选客户端对应的 Auth? 选框即可让客户端加入此网络。每个客户端在加入的时候会自动分配一个 IP 地址，你还可以手动分配客户端的 IP 地址。</p><p><img src="https://blog.diyworld.me/post-images/1675333787301.png" alt="" loading="lazy"></p><p>如果多个机器互相访问就需要每个机器都安装 Zerotier 客户端并加入同一个网络。</p><p>借助 OpenWrt 和 Zerotier 可以暴露整个局域网到 Zerotier 网络中，只需要 OpenWrt 中的 Zerotier 加入网络即可。</p><p>勾选「自动允许客户端 NAT」即可。</p><p><img src="https://blog.diyworld.me/post-images/1675333893017.png" alt="" loading="lazy"></p><p>OpenWrt 不需要作为你的主路由，它可以通过 LAN 口接入你现有的局域网，关闭 LAN 口的 DHCP 服务，作为旁路由使用。</p><p>你还需要在 Zerotier 控制台中配置静态路由。</p><p><img src="https://blog.diyworld.me/post-images/1675333937686.png" alt="" loading="lazy"></p><p>在添加静态路由的时候Destination填局域网的网络地址，(Via)为下一跳地址，即 OpenWrt 路由器的 Zerotier 地址。</p><p>上面的静态路由配置将192.168.10.0/24局域网和192.168.11.0/24局域网暴露在 Zerotier 网络中。172.22.39.15和172.22.105.60分别是两个 OpenWrt 路由器在 Zerotier 网络中的地址，这两个路由器均配置了自动允许客户端 NAT。</p><p>这样做的优点是管理方便，不需要在每个机器上安装客户端并且加入网络。并且即使你在使用移动网络的时候可以直接访问到家里局域网的 IP，并且还是通过局域网 IP 访问，并不需要修改软件配置。</p><p>在外使用移动网络的情况下，你可以使用192.168.10.0/24或192.168.11.0/24网段的内网地址访问局域网 A 或局域网 B 内的资源。</p><p>如果局域网 A 中的某台设备需要访问局域网 B 中的资源，还是需要在该设备上安装 Zerotier 客户端，并且加入统一 Zerotier 网络，然后就可以通过192.168.11.0/24的内网 IP 地址来访问局域网 B 中的资源了。</p><h3 id="配置openwrt" tabindex="-1">配置Openwrt <a class="header-anchor" href="#配置openwrt" aria-label="Permalink to &quot;配置Openwrt&quot;">​</a></h3><blockquote><p>(可选，如果按照上面设置完成后没有效果可以尝试。)</p></blockquote><ol><li><p>添加新接口 web界面，网络 -&gt; 接口，添加新接口 <code>名称</code> ZeroTier <code>协议</code> 选不配置协议 <code>接口</code> 选z开头的适配器 <code>高级设置</code> 开机自动运行 点击 <code>创建接口</code> 按钮，在之后出现的 <code>防火墙设置</code> 页面中， <code>创建/分配防火墙区域</code> 选择 <code>lan</code>，保存并应用。</p></li><li><p>修改防火墙 web界面，网络 -&gt; 防火墙-&gt;流量规则-&gt; 通信规则，添加： <code>名称</code> Allow-ZeroTier-Inbound <code>协议</code> UDP <code>源区域</code> 任意区域 <code>目标区域</code> 设备 <code>目标端口</code> 1-65535 保存&amp;应用。</p></li></ol><h2 id="显卡直通-通过-hdmi-输出-windows-图像" tabindex="-1">显卡直通 通过 HDMI 输出 Windows 图像 <a class="header-anchor" href="#显卡直通-通过-hdmi-输出-windows-图像" aria-label="Permalink to &quot;显卡直通 通过 HDMI 输出 Windows 图像&quot;">​</a></h2><blockquote><p>网上有部分内容已经过时，所以自己实践重写一遍。写于 2025/2/12，仅在以下环境测试 CPU J4125 显卡 Intel(R)UHD Graphics 600 PVE 版本 7.3-3 已安装 Windows Server 2019</p></blockquote><h3 id="pve-配置" tabindex="-1">PVE 配置 <a class="header-anchor" href="#pve-配置" aria-label="Permalink to &quot;PVE 配置&quot;">​</a></h3><h4 id="修改grub启动文件" tabindex="-1">修改grub启动文件 <a class="header-anchor" href="#修改grub启动文件" aria-label="Permalink to &quot;修改grub启动文件&quot;">​</a></h4><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/default/grub</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>将</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GRUB_CMDLINE_LINUX_DEFAULT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;quiet intel_iommu=on&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>改为</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GRUB_CMDLINE_LINUX_DEFAULT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;quiet intel_iommu=on iommu=pt initcall_blacklist=sysfb_init&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注意：其他教程说的是 要改为 video=efifb:off,vesafb:off 但是我设置后PVE log会疯狂报错</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kvm:vfio_region_write(0000:00:02.0:region2+0xfeb26b4,0x0,4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)failed:Device or resource busy</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pve</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vfio-pci</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0000:00:02.0:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BAR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> can&#39;t reserve</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>搜索后找到帖子 <a href="https://forum.proxmox.com/threads/igd-passthrough-help-pve-kernel-vfio-pci-0000-00-02-0-bar-2-cant-reserve.126340/post-551802" target="_blank" rel="noreferrer">pve kernel: vfio-pci 0000:00:02.0: BAR 2: can&#39;t reserve</a> 里面提到 video=vesafb:off video=efifb:off video=simplefb:off have not worked on Proxmox for some time.</p><p>这也是一些人提到的 <code>装的win10那么卡 windows开机特别慢</code> 的原因。</p><h4 id="加载直通所需要的linux模组" tabindex="-1">加载直通所需要的Linux模组 <a class="header-anchor" href="#加载直通所需要的linux模组" aria-label="Permalink to &quot;加载直通所需要的Linux模组&quot;">​</a></h4><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/modules</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#加入</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vfio</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vfio_iommu_type1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vfio_pci</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vfio_virqfd</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="屏蔽pve自带核显相关驱动" tabindex="-1">屏蔽PVE自带核显相关驱动 <a class="header-anchor" href="#屏蔽pve自带核显相关驱动" aria-label="Permalink to &quot;屏蔽PVE自带核显相关驱动&quot;">​</a></h4><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/modprobe.d/pve-blacklist.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#加入</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">blacklist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> snd_hda_intel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">blacklist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> snd_hda_codec_hdmi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">blacklist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i915</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>注意：在我的 PVE 版本里面是 pve-blacklist.conf 文件，其他教程中的 blacklist.conf 对我无效。</p><h4 id="配置显卡声卡相关直通模组" tabindex="-1">配置显卡声卡相关直通模组 <a class="header-anchor" href="#配置显卡声卡相关直通模组" aria-label="Permalink to &quot;配置显卡声卡相关直通模组&quot;">​</a></h4><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lspci</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0300|0403&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#shell输出以下信息    #J4125  应该和我一样</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">00:02.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0300:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8086:3185</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (rev </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#00:02 对应显卡，记下 8086:3185</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">00:0e.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0403:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8086:3198</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (rev </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#00:0e 对应声卡，记下 8086:3198</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/modprobe.d/vfio.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#加入</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">options</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vfio-pci</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ids=8086:3185,8086:3198</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新配置并重启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update-initramfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reboot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#重启后查一下</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsmod</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vfio</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#看是否有类似信息，有基本就配置成功了</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vfio_pci</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                  16384</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vfio_pci_core</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          73728</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     vfio_pci</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vfio_virqfd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">              16384</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     vfio_pci_core</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">irqbypass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                16384</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     vfio_pci_core,kvm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vfio_iommu_type1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   40960</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vfio</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                        45056</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      vfio_pci_core,vfio_iommu_type1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="windows-配置" tabindex="-1">Windows 配置 <a class="header-anchor" href="#windows-配置" aria-label="Permalink to &quot;Windows 配置&quot;">​</a></h3><h4 id="安装驱动" tabindex="-1">安装驱动 <a class="header-anchor" href="#安装驱动" aria-label="Permalink to &quot;安装驱动&quot;">​</a></h4><p>回到PVE控制面板，找到Windows的虚拟机，先将其关机，然后在硬件中，添加PCI设置， 找到你显卡的型号并添加即可，其它选项默认。</p><p><img src="https://blog.diyworld.me/post-images/1739355512940.webp" alt="" loading="lazy"></p><p><img src="https://blog.diyworld.me/post-images/1739355527627.webp" alt="" loading="lazy"></p><p>完成添加PCI 的显卡后，启动虚拟机安装驱动</p><p>进入到windows界面，打开【设备管理器】，最下面的显示适配器中，可以看到有两个显卡</p><p><img src="https://blog.diyworld.me/post-images/1739355596348.webp" alt="" loading="lazy"></p><p>驱动下载地址 <a href="https://newsupport.lenovo.com.cn/driveDownloads_detail.html?driveId=74325" target="_blank" rel="noreferrer">Intel VGA Driver 英特尔集成显卡驱动</a>，必须下载下面历史版本中的 26.20.100.7262 版本，其他版本会报错。下载后双击安装即可。</p><blockquote><p>win10 放置一段时间后会自动安装驱动，不过自动安装的驱动版本并不是 26.20.100.7262 版本，无法正常使用。同理 Windows 自己更新的也一样。</p></blockquote><h4 id="检验是否正常" tabindex="-1">检验是否正常： <a class="header-anchor" href="#检验是否正常" aria-label="Permalink to &quot;检验是否正常：&quot;">​</a></h4><p>设备管理器，能看到显卡的正确型号，并且没有感叹号</p><p>任务管理器，在性能左侧，能看到GPU 的栏目</p><p><img src="https://blog.diyworld.me/post-images/1739356118451.webp" alt="" loading="lazy"></p><h4 id="最后" tabindex="-1">最后 <a class="header-anchor" href="#最后" aria-label="Permalink to &quot;最后&quot;">​</a></h4><p>将虚拟机 Windows 关机，然后修改虚拟机的硬件配置，删除刚才添加的核显，添加 PCI 设备声卡，将“显示”选项改为“无”。</p><p><img src="https://blog.diyworld.me/post-images/1739356322898.webp" alt="" loading="lazy"></p><blockquote><p>注意：显示修改为 无 后就无法在 PVE 对应的 控制台处登录了。之后再使用 RDP 登录吧。</p></blockquote><p>虚拟机添加USB设备直通的顺序是</p><ol><li>将USB设备插入到all in one主机中（主机不用关机，虚拟机也不用关机）；</li><li>到虚拟机的硬件中，添加USB设备，选择【使用USB端口】；</li><li>这个时候应该能读取到你的USB设备，并选择，确定；</li></ol><p>注意：添加的USB设备，是支持热插拔的，但是不能换USB口，下次开机启动，也能正常识别，不用重新设置。</p><p><img src="https://blog.diyworld.me/post-images/1739356607020.webp" alt="" loading="lazy"></p><h3 id="通过修改对应虚拟机配置文件直通" tabindex="-1">通过修改对应虚拟机配置文件直通 <a class="header-anchor" href="#通过修改对应虚拟机配置文件直通" aria-label="Permalink to &quot;通过修改对应虚拟机配置文件直通&quot;">​</a></h3><p>将 igpu.bin 上传到PVE系统 (网上搜索能找到下载地址，不过我并没有用到)</p><p>进入PVE shell</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/pve/qemu-server/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Windows</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 系统的虚拟机I</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#顶部添加一段代码让直通输出使用指定的配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">args:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -device</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vfio-pci,host=00:02.0,addr=0x02,x-igd-gms=1,romfile=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">你的igpu.bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 路</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>注意：网上大部分教程都有 romfile 参数，但是我在使用的时候会出现了 <code>鼠标指针不见 音频无输出</code> 的问题，在删掉 romfile=&lt;你的igpu.bin 路径&gt; 参数后这些问题都解决了。如果你还存在 <code>鼠标指针不见</code> 的情况可以开启 <code>显示指针轨迹</code>。或者使用其他版本的 igpu.bin。</p><p>开机后，就能直接通过显示器，看到虚拟机中的内容了。不过我在第一次弄的时候输出的画面存在大量噪点和条纹，还以为我哪里弄错了，最后排查出来是热插拔 HDMI 线的原因，不是说这玩意能热插拔的吗？</p>`,149)]))}const g=a(l,[["render",p]]);export{k as __pageData,g as default};
